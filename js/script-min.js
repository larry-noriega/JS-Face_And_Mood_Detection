const video=document.getElementById("video");var constraints={audio:!1,video:{width:720,height:560}};function startVideo(){navigator.mediaDevices.getUserMedia(constraints).then((function(e){"srcObject"in video?video.srcObject=e:video.src=window.URL.createObjectURL(e),video.onloadedmetadata=function(e){video.play()}})).catch((function(e){}))}Promise.all([faceapi.nets.tinyFaceDetector.loadFromUri("/js/models"),faceapi.nets.faceLandmark68Net.loadFromUri("/js/models"),faceapi.nets.faceRecognitionNet.loadFromUri("/js/models"),faceapi.nets.faceExpressionNet.loadFromUri("/js/models")]).then(startVideo),void 0===navigator.mediaDevices&&(navigator.mediaDevices={}),void 0===navigator.mediaDevices.getUserMedia&&(navigator.mediaDevices.getUserMedia=function(e){var a=navigator.webkitGetUserMedia||navigator.mozGetUserMedia;return a?new Promise((function(i,t){a.call(navigator,e,i,t)})):Promise.reject(new Error("getUserMedia is not implemented in this browser"))}),video.addEventListener("play",(()=>{const e=faceapi.createCanvasFromMedia(video);document.body.append(e);const a={width:video.width,height:video.height};faceapi.matchDimensions(e,a),setInterval((async()=>{const i=await faceapi.detectAllFaces(video,new faceapi.TinyFaceDetectorOptions).withFaceLandmarks().withFaceExpressions(),t=faceapi.resizeResults(i,a);e.getContext("2d").clearRect(0,0,e.width,e.height),faceapi.draw.drawDetections(e,t),faceapi.draw.drawFaceLandmarks(e,t),faceapi.draw.drawFaceExpressions(e,t)}),100)}));